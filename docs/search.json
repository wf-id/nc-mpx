[
  {
    "objectID": "disclaimer.html",
    "href": "disclaimer.html",
    "title": "MPX in North Carolina",
    "section": "",
    "text": "The information on this website is being provided on an ‘as-is’ basis. We make no warranty or guarantee of any time of the accuracy, timeliness, or completeness of the data for any particular use nor shall any warranty be implied. We assume no liability for errors, omissions, or inaccuracies. We reserve the right to discontinue providing these data at any time."
  },
  {
    "objectID": "us.html",
    "href": "us.html",
    "title": "MPX in the US",
    "section": "",
    "text": "These data provide a longitudinal view of MPX cases by state in the United states. These data are pulled from the Centers for Disease Control and Prevention Monkeypox dashboard and stored in this repository."
  },
  {
    "objectID": "us.html#overall-incidence",
    "href": "us.html#overall-incidence",
    "title": "MPX in the US",
    "section": "Overall Incidence",
    "text": "Overall Incidence\n\noverall = {\n  const co2data = await FileAttachment('https://raw.githubusercontent.com/wf-id/us-mpx/main/output/us-incidence.csv')\n    .csv({ typed: true });\n  return co2data.map(d => { \n    d[\"Date\"] = Date(d[\"ReportDT\"]);\n    return d; \n  });\n}\n\n\n\n\n\n\n\n//#| eval: true\nPlot.plot({\n  y: {\n    grid: true,\n    label: \"Reported Cases\"\n  },\n  x: {\n    label: \"Epi Date\"\n  },\n  marks: [\n    Plot.line(overall, {\n    x: \"EpidateDT\", \n    y: \"CaseCNT\"}),\n  ]\n});"
  },
  {
    "objectID": "us.html#graphics",
    "href": "us.html#graphics",
    "title": "MPX in the US",
    "section": "Graphics",
    "text": "Graphics\nSelect one or more states below to see the table of cases information and an associated graph of cumulative cases. Please note that individual state metrics may disagree with those posted on the CDC dashboard due to reporting delays.\n\ndata = {\n  const co2data = await FileAttachment('https://raw.githubusercontent.com/wf-id/us-mpx/main/output/mpx.csv')\n    .csv({ typed: true });\n  return co2data.map(d => { \n    d[\"Date\"] = Date(d[\"DateDT\"]);\n    return d; \n  });\n}\n\n\n\n\n\n\n\nviewof islands = Inputs.select(data.map(d => d.StateDSC), {\n  multiple: true, \n  label: \"StateDSC\", \n  initialValue: \"Alabama\",\n  sort: true, \n  unique: true})\n  \n //islands\n\n\n\n\n\n\n\n//#| eval: true\nPlot.plot({\n  y: {\n    grid: true,\n    label: \"Cumulative Cases\"\n  },\n  marks: [\n    Plot.line(filtered, {\n    x: \"DateDT\", \n    y: \"CasesCumulativeCNT\", \n    stroke: \"StateDSC\"}),\n    Plot.text(filtered, Plot.selectLast({\n    x: \"DateDT\",\n    y: \"CasesCumulativeCNT\",\n    z: \"StateDSC\",\n    text: \"StateDSC\",\n    textAnchor: \"CasesCumulativeCNT\",\n    })\n    ),\n  ]\n});\n\n\n\n\n\n\n\nfiltered = data.filter(function(data) {\n  return islands.includes(data.StateDSC);\n});\n\n\n\n\n\n\n\nInputs.table(filtered)"
  },
  {
    "objectID": "README.html",
    "href": "README.html",
    "title": "MPX in North Carolina",
    "section": "",
    "text": "This repository saves a copy of the posted reported monkeypox (MPX) cases for NC as reported by NCDHHS on their website.\n\n\n\nscrape.R saves a local snapshot of the aggregated cases as a json file in the data directory\n\n\n\n\n\nCumulative and new daily cases will be available in the mpx.csv file. The date reflects the last available update.\n\nAdditionally a graph of these data are hosted at this website.\n\n\n\nThe information on this website is for general informational purposes only and SHOULD NOT be relied upon as a substitute for sound professional medical advice, evaluation or care from your physician or other qualified health care provider.\nThe Website relies upon publicly available data that do not always agree. Authors hereby disclaims any and all representations and warranties with respect to the Website, including accuracy, fitness for use, reliability, completeness, and non-infringement of third party rights.\nThese terms and conditions are subject to change. Your use of the Website constitutes your acceptance of these terms and conditions and any future modifications thereof."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MPX Tracker for North Carolina",
    "section": "",
    "text": "Cases updated daily by NCDHHS Monday through Friday.\nThese data are current as of 19 August, 2022. Current case incidence suggests a doubling time of 9.2 (95% CI, 8.7-9.6) days."
  },
  {
    "objectID": "index.html#data-source",
    "href": "index.html#data-source",
    "title": "MPX Tracker for North Carolina",
    "section": "Data Source",
    "text": "Data Source\nThese data are pulled each weekday from the North Carolina Department of Health’s Monkeypox webpage."
  },
  {
    "objectID": "vaccines.html",
    "href": "vaccines.html",
    "title": "Vaccine Distribution",
    "section": "",
    "text": "Please see NCDHH’s latest webpage for more information about where vaccines area available."
  },
  {
    "objectID": "vaccines.html#jynneos-vaccine-distribution",
    "href": "vaccines.html#jynneos-vaccine-distribution",
    "title": "Vaccine Distribution",
    "section": "Jynneos Vaccine Distribution",
    "text": "Jynneos Vaccine Distribution\nBelow reflects the total amount of Jynneos vaccine doses that has been allocated, requested, and shipped based on information from the Administration for Strategic Preparedness and Response. Please note that administration will affect how many doses can be given per the same volume.\n\noverall = {\n  const co2data = await FileAttachment('https://raw.githubusercontent.com/wf-id/us-mpx/main/output/jynneos.csv')\n    .csv({ typed: true });\n  return co2data;\n}\n\n\n\n\n\n\n\nonlyNC = overall.filter((state) => {\n  return state.Jurisdiction == \"North Carolina\"\n})\n\n\n\n\n\n\n\n//#| eval: true\nPlot.plot({\n  y: {\n    grid: true,\n    label: \"Jynneos Vaccine Doses\"\n  },\n  x: {\n    label: \"Date\"\n  },\n  marks: [\n    Plot.ruleY([0]),\n    Plot.barY(onlyNC, {x: \"DateDT\", y: \"AllocatedCNT\", fill: [\"#0088CE\"], title: (d) =>\n        `${d.DateDT} \\n Allocated Doses: ${d.AllocatedCNT} \\n Requested Doses: ${d.RequestedCNT}` // \\n makes a new line\n    }),\n    //Plot.text(onlyNC, {x: \"DateDT\", y: \"AllocatedCNT\", text: [`Requested1`], frameAnchor: \"top\"}),\n    //Plot.text(onlyNC, {x: \"DateDT\", y: \"RequestedCNT\", text: [`Requested2`], frameAnchor: \"top\"}),\n    Plot.barY(onlyNC, {x: \"DateDT\", y: \"RequestedCNT\",fill: \"#58A618\", title: (d) =>\n        `${d.DateDT} \\n Allocated Doses: ${d.AllocatedCNT} \\n Requested Doses: ${d.RequestedCNT}` // \\n makes a new line\n    }),\n    \n  ]\n});\n\n\n\n\n\n\n\nInputs.table(onlyNC, {\n  columns: [\n    \"Jurisdiction\",\n    \"DateDT\",\n    \"AllocatedCNT\",\n    \"RequestedCNT\",\n    \"ShippedCNT\",\n    \"FilledPCT\"\n  ],\n\n  header: {\n    Jurisdiction: \"State\",\n    DateDT: \"Update Date\",\n    AllocatedCNT: \"Allocated Doses\",\n    RequestedCNT: \"Requested Doses\",\n    ShippedCNT : \"Shipped Doses\",\n    FilledPCT : \"Percent of Requested Shipped\"\n  }\n});\n\n\n\n\n\n\n\nimport {Plot} from \"@mkfreeman/plot-tooltip\""
  }
]